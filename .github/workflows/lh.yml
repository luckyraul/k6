name: Lighthouse

on:
  workflow_dispatch:
    inputs:
      urls:
        description: 'Url List (comma separated)'
        required: true
        type: string

jobs:
  run-test:
    runs-on: ubuntu-latest
    if: ${{ inputs.urls }}
    steps:
      - name: Convert comma-separated URLs to newline-separated
        id: convert
        run: |
          echo "urls<<EOF" >> $GITHUB_OUTPUT
          echo "${{ github.event.inputs.urls }}" | tr ',' '\n' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT
      - name: Lighthouse CI Action
        uses: treosh/lighthouse-ci-action@12.6.1
        with:
          urls: ${{ steps.convert.outputs.urls }}
          # budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true
          runs: 3
      - name: Convert Lighthouse JSON to CSV with Averages
        run: |
          mkdir -p output
          echo "date,url,metric,value" > output/lighthouse_report.csv
          DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)

          jq -n --arg date "$DATE" '
            def shortname(m):
              {
                "first-contentful-paint": "FCP",
                "speed-index": "SI",
                "largest-contentful-paint": "LCP",
                "total-blocking-time": "TBT",
                "cumulative-layout-shift": "CLS"
              }[m];

            def convert_value(metric; value):
              if metric == "cumulative-layout-shift" then value      # CLS is unitless
              else (value / 1000)                                    # Convert ms to s
              end;

            reduce inputs as $report (
              {};
              . + (
                $report as $r
                | $r.finalUrl as $url
                | {
                    "first-contentful-paint": $r.audits["first-contentful-paint"].numericValue,
                    "speed-index": $r.audits["speed-index"].numericValue,
                    "largest-contentful-paint": $r.audits["largest-contentful-paint"].numericValue,
                    "total-blocking-time": $r.audits["total-blocking-time"].numericValue,
                    "cumulative-layout-shift": $r.audits["cumulative-layout-shift"].numericValue
                  }
                | to_entries
                | map(select(.value != null))
                | map({
                    raw_metric: .key,
                    short_metric: shortname(.key),
                    converted_value: convert_value(.key; .value)
                  })
                | map({
                    key: ($url + "|" + .short_metric),
                    value: {sum: .converted_value, count: 1}
                  })
                | from_entries
              ) as $current
              | reduce ($current | keys_unsorted[]) as $k (
                  .;
                  .[$k] = if has($k)
                    then {
                      sum: (.[$k].sum + $current[$k].sum),
                      count: (.[$k].count + $current[$k].count)
                    }
                    else $current[$k]
                  end
                )
            )
            | to_entries
            | map({
                url: (.key | split("|")[0]),
                metric: (.key | split("|")[1]),
                avg: (.value.sum / .value.count)
              })
            | sort_by(.url, .metric)
            | .[]
            | [$date, .url, .metric, (.avg | tostring)]
            | @csv
          ' .lighthouseci/*.report.json >> output/lighthouse_report.csv
          cat output/lighthouse_report.csv
      - name: Upload CSV Report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-csv-report
          path: output/lighthouse_report.csv
